{"ast":null,"code":"var _jsxFileName = \"/home/pgf/Documents/CV-Comstructor-master/src/components/Selectimage.js\";\nimport React, { Component } from \"react\";\nimport \"./main.css\";\nimport Firebase from \"./database\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport html2canvas from 'html2canvas';\nimport { saveAs } from 'file-saver'; // export default class Profileimg extends Component {\n//     state = {\n//         loadingMessege: \"\",\n//     };\n//     handleUploadError = error => {\n//         this.setState({ isUploading: false });\n//         console.log(error);\n//     };\n//     handleUploadSuccess = filename => {\n//         Firebase.storage()\n//             .ref(\"images\")\n//             .child(filename)\n//             .getDownloadURL()\n//             .then(url => {\n//                 this.setState({ avatarURL: url });\n//             });\n//     };\n//     MoveToFB = () => {\n//         var key = Firebase.database()\n//             .ref(\"CV\")\n//             .push({\n//                 profileP: this.state.avatarURL\n//             }).key;\n//         var finalLink = \"./result1/\" + key;\n//         this.setState({ loadingMessege: \"Loading your CV...\" });\n//         setTimeout(() => {\n//             window.location.href = finalLink;\n//         }, 2000);\n//     };\n//     render() {\n//         return (\n//             <div>\n//                 <h5>Choose your profile Photo</h5>\n//                 <FileUploader\n//                     className=\"uploader\"\n//                     accept=\"image/*\"\n//                     name=\"avatar\"\n//                     placeholder=\"select image\"\n//                     randomizeFilename\n//                     storageRef={Firebase.storage().ref(\"images\")}\n//                     onUploadError={this.handleUploadError}\n//                     onUploadSuccess={this.handleUploadSuccess}\n//                 />\n//                 <button className=\"button_a\" onClick={this.MoveToFB}>\n//                     GET YOUR CV\n//         </button>\n//                 <h4>{this.state.loadingMessege}</h4>\n//             </div>\n//         );\n//     }\n// }\n\nclass Profileimg extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadingMessege: \"\"\n    };\n\n    this.GetImg = () => {\n      html2canvas(document.body).then(function (canvas) {\n        document.body.appendChild(canvas);\n        var img = canvas.toDataURL();\n        saveAs(img, \"pretty image.png\");\n      });\n    };\n\n    this.handleUploadError = error => {\n      console.log('filename: ' + error);\n      this.setState({\n        isUploading: false\n      });\n      console.log('ERR: ' + error);\n    };\n\n    this.handleUploadSuccess = filename => {\n      console.log('filename: ' + filename);\n      Firebase.storage().ref(\"images/\").child(filename).getDownloadURL().then(url => {\n        this.setState({\n          avatar: url\n        });\n        console.log(this.state.avatar);\n      });\n    };\n\n    this.handleUp = event => {\n      console.log(event.target.files[0]);\n      var Selelcted = event.target.files[0];\n      Firebase.storage().ref(\"images/\").child(Selelcted).getDownloadURL().then(url => {\n        this.setState({\n          avatar: url\n        });\n        console.log(this.state.avatar);\n      });\n    };\n\n    this.SavetoDatabase = () => {\n      var pushedData = Firebase.database().ref(\"CV/\").push({\n        profileP: this.state.avatar\n      }).then(pushedData => {\n        console.log(pushedData.key);\n        var finalLink = \"/template1/\" + pushedData.key;\n        console.log(finalLink);\n        console.log(this.state.avatar);\n        window.location.href = finalLink;\n      });\n    };\n  }\n\n  componentDidMount() {\n    Firebase.database().ref(\"CV/\").on(\"value\", list => {\n      var object = list.val();\n      var ProfileP = object.profileP;\n      this.setState({\n        avatar: ProfileP\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LogoAndName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"dev_logoT2\",\n      src: this.state.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(FileUploader, {\n      className: \"uploader\",\n      accept: \"image/*\",\n      name: \"avatar\",\n      placeholder: \"sellect your avatar\",\n      storageRef: Firebase.storage().ref(\"images\"),\n      onUploadError: this.handleUploadError,\n      onUploadSuccess: this.handleUploadSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default Profileimg;","map":{"version":3,"sources":["/home/pgf/Documents/CV-Comstructor-master/src/components/Selectimage.js"],"names":["React","Component","Firebase","FileUploader","html2canvas","saveAs","Profileimg","state","loadingMessege","GetImg","document","body","then","canvas","appendChild","img","toDataURL","handleUploadError","error","console","log","setState","isUploading","handleUploadSuccess","filename","storage","ref","child","getDownloadURL","url","avatar","handleUp","event","target","files","Selelcted","SavetoDatabase","pushedData","database","push","profileP","key","finalLink","window","location","href","componentDidMount","on","list","object","val","ProfileP","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./main.css\";\nimport Firebase from \"./database\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport html2canvas from 'html2canvas';\nimport { saveAs } from 'file-saver';\n// export default class Profileimg extends Component {\n//     state = {\n//         loadingMessege: \"\",\n//     };\n\n//     handleUploadError = error => {\n//         this.setState({ isUploading: false });\n//         console.log(error);\n//     };\n//     handleUploadSuccess = filename => {\n//         Firebase.storage()\n//             .ref(\"images\")\n//             .child(filename)\n//             .getDownloadURL()\n//             .then(url => {\n//                 this.setState({ avatarURL: url });\n//             });\n//     };\n\n\n\n//     MoveToFB = () => {\n//         var key = Firebase.database()\n//             .ref(\"CV\")\n//             .push({\n\n//                 profileP: this.state.avatarURL\n//             }).key;\n//         var finalLink = \"./result1/\" + key;\n//         this.setState({ loadingMessege: \"Loading your CV...\" });\n//         setTimeout(() => {\n//             window.location.href = finalLink;\n//         }, 2000);\n//     };\n//     render() {\n//         return (\n//             <div>\n//                 <h5>Choose your profile Photo</h5>\n//                 <FileUploader\n//                     className=\"uploader\"\n//                     accept=\"image/*\"\n//                     name=\"avatar\"\n//                     placeholder=\"select image\"\n//                     randomizeFilename\n//                     storageRef={Firebase.storage().ref(\"images\")}\n//                     onUploadError={this.handleUploadError}\n//                     onUploadSuccess={this.handleUploadSuccess}\n//                 />\n\n\n//                 <button className=\"button_a\" onClick={this.MoveToFB}>\n//                     GET YOUR CV\n//         </button>\n//                 <h4>{this.state.loadingMessege}</h4>\n//             </div>\n//         );\n//     }\n// }\nclass Profileimg extends Component {\n    state = {\n        loadingMessege: \"\"\n    }\n\n    GetImg = () => {\n\n        html2canvas(document.body).then(function (canvas) {\n            document.body.appendChild(canvas);\n            var img = canvas.toDataURL()\n            saveAs(img, \"pretty image.png\");\n\n\n        });\n    };\n\n\n    handleUploadError = error => {\n        console.log('filename: ' + error)\n\n        this.setState({ isUploading: false });\n        console.log('ERR: ' + error);\n    };\n    handleUploadSuccess = filename => {\n        console.log('filename: ' + filename)\n        Firebase.storage()\n            .ref(\"images/\")\n            .child(filename)\n            .getDownloadURL()\n            .then(url => {\n                this.setState({ avatar: url });\n                console.log(this.state.avatar)\n            });\n    };\n\n\n    handleUp = event => {\n        console.log(event.target.files[0])\n        var Selelcted = event.target.files[0]\n\n        Firebase.storage()\n            .ref(\"images/\")\n            .child(Selelcted)\n            .getDownloadURL()\n            .then(url => {\n                this.setState({ avatar: url });\n                console.log(this.state.avatar)\n            });\n    };\n\n\n    componentDidMount() {\n        Firebase.database()\n            .ref(\"CV/\")\n            .on(\"value\", list => {\n                var object = list.val();\n                var ProfileP = object.profileP;\n\n                this.setState({\n                    avatar: ProfileP\n                });\n            });\n    }\n\n\n\n    SavetoDatabase = () => {\n        var pushedData = Firebase.database()\n            .ref(\"CV/\")\n            .push({\n                profileP: this.state.avatar\n            }).then((pushedData) => {\n                console.log(pushedData.key)\n                var finalLink = \"/template1/\" + pushedData.key;\n                console.log(finalLink)\n                console.log(this.state.avatar)\n                window.location.href = finalLink;\n\n            })\n\n    };\n\n\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"App-header\">\n                    <div className=\"LogoAndName\">\n\n                        <img className='dev_logoT2' src={this.state.avatar} />\n\n\n                        <FileUploader\n                            className=\"uploader\"\n                            accept='image/*'\n                            name='avatar'\n                            placeholder='sellect your avatar'\n                            storageRef={Firebase.storage().ref(\"images\")}\n                            onUploadError={this.handleUploadError}\n                            onUploadSuccess={this.handleUploadSuccess}\n                        />\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\nexport default Profileimg;"]},"metadata":{},"sourceType":"module"}