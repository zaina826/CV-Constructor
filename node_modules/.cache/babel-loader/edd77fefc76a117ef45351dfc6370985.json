{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addToBlobPolyfill;\n\nfunction addToBlobPolyfill() {\n  Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n    value: function value(callback, type, quality) {\n      var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n          len = binStr.length,\n          arr = new Uint8Array(len);\n\n      for (var i = 0; i < len; i++) {\n        arr[i] = binStr.charCodeAt(i);\n      }\n\n      callback(new Blob([arr], {\n        type: type || 'image/png'\n      }));\n    }\n  });\n}","map":{"version":3,"sources":["/home/pgf/Documents/CV-Comstructor-master/node_modules/react-firebase-file-uploader/lib/utils/polyfill.js"],"names":["Object","defineProperty","exports","value","default","addToBlobPolyfill","HTMLCanvasElement","prototype","callback","type","quality","binStr","atob","toDataURL","split","len","length","arr","Uint8Array","i","charCodeAt","Blob"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,iBAAlB;;AACA,SAASA,iBAAT,GAA6B;AAC3BL,EAAAA,MAAM,CAACC,cAAP,CAAsBK,iBAAiB,CAACC,SAAxC,EAAmD,QAAnD,EAA6D;AAC3DJ,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeK,QAAf,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwC;AAC7C,UAAIC,MAAM,GAAGC,IAAI,CAAC,KAAKC,SAAL,CAAeJ,IAAf,EAAqBC,OAArB,EAA8BI,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,CAAD,CAAjB;AAAA,UACIC,GAAG,GAAGJ,MAAM,CAACK,MADjB;AAAA,UAEIC,GAAG,GAAG,IAAIC,UAAJ,CAAeH,GAAf,CAFV;;AAIA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAApB,EAAyBI,CAAC,EAA1B,EAA8B;AAC5BF,QAAAA,GAAG,CAACE,CAAD,CAAH,GAASR,MAAM,CAACS,UAAP,CAAkBD,CAAlB,CAAT;AACD;;AAEDX,MAAAA,QAAQ,CAAC,IAAIa,IAAJ,CAAS,CAACJ,GAAD,CAAT,EAAgB;AAAER,QAAAA,IAAI,EAAEA,IAAI,IAAI;AAAhB,OAAhB,CAAD,CAAR;AACD;AAX0D,GAA7D;AAaD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addToBlobPolyfill;\nfunction addToBlobPolyfill() {\n  Object.defineProperty(HTMLCanvasElement.prototype, 'toBlob', {\n    value: function value(callback, type, quality) {\n      var binStr = atob(this.toDataURL(type, quality).split(',')[1]),\n          len = binStr.length,\n          arr = new Uint8Array(len);\n\n      for (var i = 0; i < len; i++) {\n        arr[i] = binStr.charCodeAt(i);\n      }\n\n      callback(new Blob([arr], { type: type || 'image/png' }));\n    }\n  });\n}"]},"metadata":{},"sourceType":"script"}